%h3 Repos
%p The easy way for you developers to stumble upon projects/gems/repos that matter your work/projects/...
%p Discover <strong>#{@repos_count}</strong> repos and counting...
%br
%p Structuring the tags:
%ul
	%div &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Languages: ruby, javascript, ""
	%div &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Frameworks: rails, jquery, ""
	%div &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Tags: get wild, the more the merrier



#repos_list
	


	-# list.js search and sort
	%span#list_js
		%input.search(autofocus)
		%span Sort by
		-# %span.sort.button(data-sort="name") name
		%span.sort(data-sort="watchers")watchers

	-# filtrify placeholder
	%span#ft_placeholder
	
	-# tag controls
		#tags
			#tags_languages
				%span Languages:&nbsp;
			#tags_frameworks
				%span Frameworks:&nbsp;
			#tags_tags
				%span Tags:&nbsp;

	-# list.js ul
	%ul.list#ft_container
		-# @repos.each
		- @repos.each do |repo|
			-# repo
			-# filtrify tags in data-attributes
			%li(data-languages="#{tag_list(repo.languages)}" data-frameworks="#{tag_list(repo.frameworks)}" data-tags="#{tag_list(repo.tags)}")

				-# owner and name
				%a(href="/repo/#{repo.ident}")
					%span.owner= repo.owner
					\ /
					%span.name= repo.name

				-# links (github_url and homepage (if available))
				%a.github_url(href="#{repo.github_url}") Github &rarr;
				%a.homepage(href="#{homepage_with_fallback_github_url(repo.homepage, repo.github_url)}" style="#{display_homepage?(repo.homepage, repo.github_url)}") Homepage &rarr;
				-# do later: text homepage durch url ersetzen (evtl. problematisch bei github unterseiten mit langen links)

				-# description
				%p.description= repo.description
				
				-# watchers, forks and tags (not displayed, only for sorting purposes)
				%p.watchers(style="display: none")= repo.watchers
				%p.forks(style="display: none")= repo.forks
				-# tags for list.js indexing (sent twice at the moment)
				%p.languages(style="display: none")= tag_list(repo.languages)
				%p.frameworks(style="display: none")= tag_list(repo.frameworks)
				%p.tags(style="display: none")= tag_list(repo.tags)


				-# wiki_text
				-# do later: evtl. trunkieren oder gleich nur trunkierte version auslesen, die bei mercury update gespeichert und sanitized wird
				-# darf keinerlei html tags mehr enthalten, sollte in repo controller beim empfangen von mercury_updates gemacht werden
				-# trucate maybe on client side using https://github.com/tcorral/Cutter.js or similar library to send about 500 characters. who wants more has to click
				%p.wiki_text= strip_tags(repo.wiki_text)

				-# if interesting do later: aktivit√§tsanzeige, sort by activity
				-# if interesting do later: watchers anzeige

%p Repos can be added using this very special bookmarklet (best draw it to your browser's bookmarks bar)

#bookmarket
	%a.button(href="javascript: open('http://localhost:3000/repo/add?url=' + location.href)") Post to repos